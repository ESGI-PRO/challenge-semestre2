name: Azure deploy

on:
  push:
    branches:
      - feature/yatera
    paths:
      - ".github/workflows/azure-aks-deploy.yml"
      - "manifests/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Echo variable value -- Debug
        run: | 
          echo "Azure credentials is: ${{ secrets.AZURE_CREDENTIALS }}"
          echo "AKS kubeconfig is : ${{ secrets.AKS_kubeConfig }}"

      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - run: |
          az acr login -n challengesemestre2
          az account set --subscription e354bc29-fa51-443a-be90-a1191487a664
          az aks get-credentials --resource-group FR_CHALLENGE_SEMESTRE2 --name challengeSemestreAKS

###################
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Login to Azure
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       - name: Configure Docker Buildx
#         run: docker buildx create --use --platform linux/amd64,linux/arm64,linux/arm/v7

#       - name: Build and Push Docker Image
#         run: |
#           docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t challengesemestre2.azurecr.io/gateway-api:latest -f ./../../../gateway-api/Dockerfile .
#           docker push challengesemestre2.azurecr.io/gateway-api:latest

#       - name: Update Kubernetes Deployment
#         run: |
#           az aks get-credentials --resource-group FR_CHALLENGE_SEMESTRE2 --name challengeSemestreAKS
#           kubectl apply -f deployment.yaml

####################
      # - name: Create ACR
      #   id: create-acr
      #   run: |
      #     az acr create -n challengecd -g challengecd81d0-rg --location "West Europe" --sku Standard --admin-enabled
      #     echo "::set-output name=acr_username::`az acr credential show -n challengecd --query username | xargs`"
      #     echo "::set-output name=acr_password::`az acr credential show -n challengecd --query passwords[0].value | xargs`"
      #     echo "::add-mask::`az acr credential show -n challengecd --query passwords[0].value | xargs`"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - uses: azure/docker-login@v1
        with:
          login-server: challengecd.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images to ACR
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: challengesemestre2.azurecr.io/gateway-api:latest
          build-args: |
            BASE_IMAGE=mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim-arm32v7
          file: ./gateway-api/Dockerfile

      #################ici
      # - uses: azure/k8s-set-context@v1
      #   id: login
      #   with:
      #     kubeconfig: ${{ secrets.AKS_kubeConfig }}

      # - name: Create namespace
      #   run: |
      #     namespacePresent=`kubectl get namespace | grep challenges | wc -l`
      #     if [ $namespacePresent -eq 0 ]
      #     then
      #         echo `kubectl create namespace challenges`
      #     fi
#####################fin
      # - uses: azure/k8s-create-secret@v1
      #   with:
      #     namespace: joke-app86ff
      #     container-registry-url: challengecd.azurecr.io
      #     container-registry-username: ${{ steps.create-acr.outputs.acr_username }}
      #     container-registry-password: ${{ steps.create-acr.outputs.acr_password }}
      #     secret-name: jokeappdockerauth

      ####################ici
      # - uses: azure/k8s-deploy@v1.2
      #   with:
      #     namespace: challenges
      #     manifests: |
      #       manifests/deployment.yml
      #       manifests/service.yml
      #     images: |
      #       idboubacar/challenge-semestre2-gateway-api:latest